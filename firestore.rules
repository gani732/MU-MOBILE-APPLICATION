rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function getUserData() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data;
    }
    
    function hasRole(role) {
      return isAuthenticated() && 
        exists(/databases/$(database)/documents/users/$(request.auth.uid)) && 
        getUserData().role == role;
    }

    function isAdmin() {
      return isAuthenticated() && 
        hasRole('admin') && 
        request.auth.token.admin == true &&
        exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
        getUserData().role == 'admin';
    }

    // Student-Parent Links collection
    match /studentParent/{linkId} {
      allow read: if isAuthenticated() && (
        isAdmin() ||
        getUserData().role == 'parent' && resource.data.parentId == request.auth.uid ||
        getUserData().role == 'student' && resource.data.studentId == request.auth.uid
      );
      allow create, update: if isAuthenticated() && isAdmin();
      allow delete: if isAuthenticated() && isAdmin();
    }

    // Users collection - Allow initial authentication and creation
    match /users/{userId} {
      allow read: if isAuthenticated() && (request.auth.uid == userId || isAdmin());
      allow write: if isAuthenticated() && (request.auth.uid == userId || isAdmin());
    }

    // Parents collection - Allow initial creation
    match /parents/{parentId} {
      allow read: if isAuthenticated() && (request.auth.uid == parentId || isAdmin());
      allow write: if isAuthenticated() && (request.auth.uid == parentId || isAdmin());
    }

    // Students collection
    match /students/{studentId} {
      allow read: if isAuthenticated();
      allow write: if isAuthenticated() && (
        isAdmin() ||
        hasRole('faculty') || 
        getUserData().role == 'parent' && resource.data.parentId == request.auth.uid
      );
    }

    // Locations collection
    match /locations/{studentId}/{document=**} {
      allow read: if isAuthenticated() && (
        isAdmin() ||
        hasRole('faculty') || 
        getUserData().role == 'parent' && exists(/databases/$(database)/documents/students/$(studentId)) && get(/databases/$(database)/documents/students/$(studentId)).data.parentId == request.auth.uid
      );
      allow write: if isAuthenticated() && (isAdmin() || hasRole('faculty'));
    }

    // Faculty collection
    match /faculty/{facultyId} {
      allow read: if isAuthenticated();
      allow write: if isAuthenticated() && (isAdmin() || (request.auth.uid == facultyId && hasRole('faculty')));
    }

    // Announcements collection
    match /announcements/{announcementId} {
      allow read: if isAuthenticated();
      allow write: if isAuthenticated() && (isAdmin() || hasRole('faculty'));
    }

    // Assignments collection
    match /assignments/{assignmentId} {
      allow read: if isAuthenticated();
      allow write: if isAuthenticated() && (isAdmin() || hasRole('faculty'));
      
      match /submissions/{submissionId} {
        allow read: if isAuthenticated() && (
          isAdmin() ||
          hasRole('faculty') || 
          getUserData().role == 'parent' && exists(/databases/$(database)/documents/students/$(submissionId)) && get(/databases/$(database)/documents/students/$(submissionId)).data.parentId == request.auth.uid
        );
        allow write: if isAuthenticated() && (isAdmin() || hasRole('faculty'));
      }
    }

    // Attendance collection
    match /attendance/{attendanceId} {
      allow read: if isAuthenticated();
      allow write: if isAuthenticated() && (isAdmin() || hasRole('faculty'));
    }

    // Progress collection
    match /progress/{progressId} {
      allow read: if isAuthenticated();
      allow write: if isAuthenticated() && (isAdmin() || hasRole('faculty'));
    }

    // Default deny
    match /{document=**} {
      allow read, write: if false;
    }
  }
}